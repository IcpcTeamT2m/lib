//string

//文字列の初期化
//----------------------------------------------
string str(10, 'a');	//'a'でstrのすべての要素10個を埋める
						//出力: "aaaaaaaaaa"


//文字列長
//----------------------------------------------
//文字列の長さを求めるには.size()を用いる
string str = "abcdef";
str.size();				//出力:5



//文字列操作
//----------------------------------------------
string s = "abc";

string s("abc");		//これも上と同じ効果

string s1(s,1,3);  		//部分代入 s[1]からs[3]

//stringへのアクセス
s[0];			//出力 a
s[1];			//出力 b

//文字列は+で結合できる
string s1("abc"), s2("def");
s1 + s2; 		//出力 "abcdef"

//.at()でstring内の要素にアクセスできる
s.at(2)='d';		//sの中身は'abd'
s[2]='d';			//上と同じ効果




//文字列の検索
//----------------------------------------------
/*
find	指定した文字や文字列が、最初に出現する位置を返す。
rfind	指定した文字や文字列が、最後に出現する位置を返す。
find_first_of	指定した文字や文字列の一部である文字が、最初に出現する位置を返す。
find_last_of	指定した文字や文字列の一部である文字が、最後に出現する位置を返す。
find_first_not_of	指定した文字や文字列の一部ではない文字が、最初に出現する位置を返す。
find_last_not_of	指定した文字や文字列の一部ではない文字が、最後に出現する位置を返す
*/
 string s="accdcde";
   s.find("cd");              // 2が返る
   s.rfind("cd");             // 4が返る
   s.find_first_of("cd");     // 1が返る
   s.find_last_of("cd");      // 5が返る
   s.find_first_not_of("cd"); // 0が返る
   s.find_last_not_of("cd");  // 6が返る
   
   

//文字列の追加
//----------------------------------------------
//push_backで文字を末尾に追加
string str;				//空の文字列(string)
str.push_back('Z')		//末尾に'Z'を追加
str += '0';   		  	//この書き方も上と同じ(後ろに'0'追加)



//文字列の削除
//----------------------------------------------
//pop_backで最後の文字を削除
string str("12345");
str.pop_back();    //  末尾文字（この場合は '5'）を削除

//任意の場所を削除したい場合はeraseを使用
string str("01234");//とすると

str.erase(str.begin() + 2);       				//  3番目の要素（'2'）を削除
//範囲を指定して消去する際はerase(first,last)
//範囲は[first, last)の区間
str.erase(str.begin() + 2, str.begin() + 4); 	//  '2', '3' を削除
												